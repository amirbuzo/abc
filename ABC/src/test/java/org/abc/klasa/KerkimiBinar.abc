klasa KerkimiBinar
{
    publike statike asgje kryesore(Tekst[] args)
    {
	Sistem.printo(iri BS().start(20));
    }
}
// This klasa contains an array of integers and
// methods to initialize, prnumer and Search the array
// using Binary Search

klasa BS{
   
    numer size ;

    publike numer start(numer sz){
	numer aux01;
	numer aux02;
	aux01 = ky.Fillo(sz);
	aux02 = ky.Print();
	nese (ky.Search(8)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(19)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(20)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(21)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(37)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(38)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(39)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;
	nese (ky.Search(50)) Sistem.printo(1) ;
	tjeter Sistem.printo(0) ;

	kthe 999 ;
    }


    // Search for a specific value (num) using
    // binary Search
    publike bul Search(numer num){
	bul bs01 ;
	numer right ;
	numer left ;
	bul var_cont ;
	numer medium ;
	numer aux01 ;
	numer nt ;

	aux01 = 0 ;
	bs01 = fals ;
	right = 2;
	left = 0 ;
	var_cont = vertete ;
	ndersa (var_cont){
	    medium = left + right ;
	    medium = ky.Div(medium);
	   // aux01 = number[medium] ;
	    nese (num < aux01) right = medium - 1 ;
	    tjeter left = medium + 1 ;
	    nese (ky.Compare(aux01,num)) var_cont = fals ;
	    tjeter var_cont = vertete ;
	    nese (right < left) var_cont = fals ;
	    tjeter nt = 0 ;
	}

	nese (ky.Compare(aux01,num)) bs01 = vertete ;
	tjeter bs01 = fals ;
	kthe bs01 ;
    }

    // This method computes and kthes the
    // integer division of a number (num) by 2
    publike numer Div(numer num){
	numer count01 ;
	numer count02 ;
	numer aux03 ;

	count01 = 0 ;
	count02 = 0 ;
	aux03 = num - 1 ;
	ndersa (count02 < aux03) {
	    count01 = count01 + 1 ;
	    count02 = count02 + 2 ;
	}
	kthe count01 ;
    }


    // This method compares two integers and
    // kthes vertete nese they are equal and fals
    // otherwise//length
    publike bul Compare(numer num1 , numer num2){
	bul retval ;
	numer aux02 ;

	retval = fals ;
	aux02 = num2 + 1 ;
	nese (num1 < num2) retval = fals ;
	tjeter nese (!(num1 < aux02)) retval = fals ;
	tjeter retval = vertete ;
	kthe retval ;
    }

    // Prnumer the integer array
    publike numer Print(){
	numer j ;

	j = 1 ;
	ndersa (j < (size)) {
	    j = j + 1 ;
	}
	Sistem.printo(99999);
	kthe 0 ;
    }


    // Filloialize the integer array
    publike numer Fillo(numer sz){
	numer j ;
	numer k ;
	numer aux02 ;
	numer aux01 ;

	size = sz ;

	j = 1 ;
	k = size + 1 ;
	ndersa (j < (size)) {
	    aux01 = 2 * j ;
	    aux02 = k - 3 ;
	    j = j + 1 ;
	    k = k - 1 ;
	}
	kthe 0 ;
    }

}
klasa Binary
{
     publike numer start1(numer sz)
     {
		 kthe 0;
	}

}
